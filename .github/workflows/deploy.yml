name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy-backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install backend dependencies
      working-directory: ./backend
      run: npm ci --only=production
    
    - name: Deploy to Heroku (Backend)
      if: false  # Set to true when Heroku is configured
      uses: akhileshns/heroku-deploy@v3.12.14
      with:
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: "tms-backend-prod"
        heroku_email: ${{ secrets.HEROKU_EMAIL }}
        appdir: "backend"
    
    - name: Deploy to Railway (Alternative)
      if: false  # Set to true when Railway is configured
      run: |
        echo "Railway deployment placeholder"
        # Add Railway deployment commands here

  deploy-frontend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Build frontend
      working-directory: ./frontend
      run: npm run build
      env:
        VITE_API_URL: ${{ secrets.VITE_API_URL }}
    
    - name: Deploy to Vercel
      if: false  # Set to true when Vercel is configured
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        working-directory: ./frontend
    
    - name: Deploy to Netlify (Alternative)
      if: false  # Set to true when Netlify is configured
      uses: netlify/actions/cli@master
      with:
        args: deploy --prod --dir=frontend/dist
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}

  health-check:
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    if: always()
    
    steps:
    - name: Health Check Backend
      run: |
        if [ "${{ needs.deploy-backend.result }}" == "success" ]; then
          curl -f ${{ secrets.BACKEND_URL }}/health || exit 1
        fi
    
    - name: Health Check Frontend
      run: |
        if [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
          curl -f ${{ secrets.FRONTEND_URL }} || exit 1
        fi